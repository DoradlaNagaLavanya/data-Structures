class node:
  def __init__(self,data,next=None):
    self.data=data
    self.next=None
class linkedlist:
  def __init__(self,head=None):
    self.head=None
  def print(self,head):
    temp=self.head
    while(temp):
      print(temp.data,end=" ")
      temp=temp.next  
  def create(self):
    n=int(input("enter number of nodes"))
    for i in range(0,n):
      data=int(input("eneter data"))
      newn=node(data)
      if(self.head):
        cur=self.head
        while(cur.next):
          cur=cur.next
        cur.next=newn
      else:
        self.head=newn    
    return self.head      
  def insert(self,head,data,pos):
    n=int(input("enter number of nodes"))
    newn=node(data)  
    if(pos==1):
      if(self.head==None):
        self.head=newn
      else:
        newn.next=self.head
        self.head= newn
    elif(pos==n):
      temp=self.head
      while(temp.next):
        temp=temp.next
      temp.next=newn
    elif(pos>1 and pos<n):
      temp=self.head
      for i in range(1,pos-1):
        temp=temp.next
      newn.next=temp.next
      temp.next=newn
    return self.head
  def reverse(self,head):
    curr=self.head
    prev=None
    while(curr):
      temp=curr.next
      curr.next=prev
      prev=curr
      curr=temp
    self.head=prev  
    return self.head 
  def delete(self,head,pos):
    n=int(input("enter number of nodes"))
    if(pos==1):
      if(head==None):
        print("cant delete")
      else:
        self.head=self.head.next  
    elif(pos==n):
      temp=self.head
      while(temp.next.next):
        temp=temp.next
      temp.next=None
    elif(pos>1 and pos<n):
      temp=self.head
      for i in range(1,pos-1):
        temp=temp.next
      temp.next=temp.next.next
    return self.head    
ll=linkedlist()
z=ll.create()
y=ll.delete(z,4)
ll.print(y)
